name: Build and deploy documentation

on:
  push:
    branches:
      - develop
    tags:
      - 'v*'

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    environment: dev

    steps:
      - name: Checkout getml-docs repo
        uses: actions/checkout@v4
        with:
          ref: develop

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.GITLAB_MONOREPO_SSH_KEY }}" > ~/.ssh/id_ed25519_gitlab_monorepo
          echo "${{ secrets.GH_CODE17DEV_SSH_KEY }}" > ~/.ssh/id_ed25519_github_code17dev
          chmod 600 ~/.ssh/id_ed25519_gitlab_monorepo
          chmod 600 ~/.ssh/id_ed25519_github_code17dev
          
          # Set up SSH config
          echo "Host gitlab.com" >> ~/.ssh/config
          echo "  HostName gitlab.com" >> ~/.ssh/config
          echo "  User git" >> ~/.ssh/config
          echo "  IdentityFile ~/.ssh/id_ed25519_gitlab_monorepo" >> ~/.ssh/config

          echo "Host code17devgit" >> ~/.ssh/config
          echo "  HostName github.com" >> ~/.ssh/config
          echo "  User git" >> ~/.ssh/config
          echo "  IdentityFile ~/.ssh/id_ed25519_github_code17dev" >> ~/.ssh/config
          
          # Add GitLab and GitHub to known_hosts
          ssh-keyscan gitlab.com >> ~/.ssh/known_hosts
          ssh-keyscan github.com >> ~/.ssh/known_hosts

      - name: Install Hatch & create environment
        run: |
          pip install hatch 
          hatch env create

      - name: Clone monorepo & install getML
        run: |
          git clone -b $BRANCH git@gitlab.com:getml/all/monorepo.git
          hatch run pip install monorepo/src/python-api
        env:
          BRANCH: ${{ vars.MONOREPO_DEV_BRANCH }}

      - name: Set git credentials
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"

      - name: Deploy dev version
        run: |
          hatch run mike deploy --config-file ./src/mkdocs.yml dev
        if: "github.ref == 'refs/heads/develop'"

      - name: Extract and deploy latest version
        run: |
          export GETML_VERSION=$(echo "${{ github.ref }}" | sed -n 's/refs\/tags\/v\([0-9]*\.[0-9]*\)\..*/\1/p')
          hatch run mike deploy --config-file ./src/mkdocs.yml --update-aliases $GETML_VERSION latest
        if: "startsWith(github.ref, 'refs/tags/')"

      - name: Checkout gh-pages branch
        run: |
          git checkout gh-pages

      - name: Add CNAME file
        run: |
          if [ ! -f CNAME ]; then
          echo "dev.getml.com" > CNAME
          fi
      
          git add CNAME
          git commit -m "Add CNAME file if it doesn't exist"

      - name: Push changes to gh-pages
        run: |
          git push origin gh-pages
